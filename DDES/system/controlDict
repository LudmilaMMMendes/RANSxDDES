/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
application     pimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         16900;

deltaT          0.001;

writeControl    adjustableRunTime;

writeInterval   1;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;
adjustTimeStep  yes;//yes

maxCo           1;

runTimeModifiable true;
functions
{
     Co1
    {
        type                CourantNo;
        libs                ("libfieldFunctionObjects.so");
        executeControl      timeStep;
        executeInterval     2;
        writeControl        writeTime;
    }

  Yplus
   {
        type                yPlus;
        libs                ("libfieldFunctionObjects.so");
        executeControl      timeStep;
        executeInterval     2;
        writeControl        writeTime;
    }

    fieldAverage1
    {
        type            fieldAverage;
        libs            ("libfieldFunctionObjects.so");
        writeControl    writeTime;
 
        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );

}

turbulenceFields1
{
    // Mandatory entries (unmodifiable)
    type            turbulenceFields;
    libs            ("libfieldFunctionObjects.so");

    // Mandatory entries (runtime modifiable)
    // Either field or fields entries

    fields ( R );
    // Optional (inherited) entries
  //  region          region0;
  //  enabled         true;
  //  log             true;
  //  timeStart       0;
  //  timeEnd         1000;
    executeControl  timeStep;
    executeInterval 2;
    writeControl    writeTime;
  //  writeInterval   1;
}


}




// ************************************************************************* //
